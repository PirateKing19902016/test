TODOs

Remove stderr from tail since that confuses some users:
tail: cannot open .bedGraph file for reading no such file or directory

warning/error for convert_labels when a chunk has no noPeaks labels.

error in convert_labels for noPeaks label with sample groups up?

test create_track_hub.

negative test cases for denormalize* functions.

use popen in C to pipe bigWigToBedGraph stdout to our coverage
counting function, which should be much faster than using an
intermediate bedGraph
file. http://www.cs.uleth.ca/~holzmann/C/system/shell_commands.html

2017.01.22

Fix optimization bug in
PeakSegPipeline::problem.PeakSegFPOP("~/PeakSegPipeline-test/input/samples/kidney/MS002201/problems/chr10:18024675-38818835",
"18299537.4379804") by adding a special case when the functions are
equal on the right, with no crossing points before that, by using the
fact that the Log coefficient can be used to test which function is
greater at log_mean=-Inf.

2017.01.19

---- FPOP target does not find zero error model -- need to explore fp,
we can do that in parallel without losing any time.
This is H3K36me3_AM_immune/McGill0004
      penalty peaks     status fp fn errors
1:        Inf     0   feasible  0  3      3
2: 24195.6886     4   feasible  1  1      2
3: 13706.5254     5   feasible  1  0      1
4: 10354.2183    10   feasible  1  0      1
5:  6219.2421    17   feasible  1  0      1
6:  3580.6824    44   feasible  1  0      1
7:   322.9294   399 infeasible  1  0      1
8:     0.0000  4683 infeasible  1  0      1
--- The corresponding PDPA model has 0 errors for 1 and 2 peaks,
which where not explored by the current FPOP target algo.
     sample.id peaks       loss errors
 1: McGill0101     0  -16289.63      3
 2: McGill0101     1 -700673.64      0
 3: McGill0101     2 -751953.96      0
 4: McGill0101     3 -792692.07      1
 5: McGill0101     4 -831639.35      2
 6: McGill0101     5 -853440.37      1
 7: McGill0101     6 -866254.31      1
 8: McGill0101     7 -880097.83      1
 9: McGill0101     8 -892845.31      1
10: McGill0101     9 -903400.20      1

2017.12.30

remove animint2 dep

use new PeakSegJoint with Faster algo.

2017.12.13

in problem.coverage:
- caching now also checks that start of
  first line of coverage is equal to problem start.
- we compress data after inserting zeros.

in problem.train, remove targets with two infinite limits before
training.

2017.12.03

bugfix for numerical issue in min-more C++ code: when looking for a
minimum, and the function is decreasing on the interval, there is a
new special case. Before we were always using the right of the
interval as a new minimum (and starting to add a constant), now we
test the cost at the left and right, and if it is numerically
constant, then we just add the interval and continue looking for a
minimum. An analogous special case was already implemented for
min-less.

2017.11.30

denormalize rounds to nearest integer, test case for 0.1, 0.2, etc.

2017.11.22

denormalize* functions.

2017.11.21

downloadBigWigs function.

2017.11.08

problem.predict and problem.predict.allSamples now return a data.table
of peaks with sample.id and sample.group columns -- this can now be
passed to create_problems_joint to avoid hitting the file system
again.

New problem.pred.cluster.targets which, for one problem, does separate
peak prediction for all samples, then clusters peaks across all
samples to create joint problems, then computes joint target intervals
for labeled joint problems.

problem.joint.targets now saves problem/problemID/jointTargets.rds
which problem.joint.train now looks for. This is (1) faster than
looking for all problem/problemID/jointProblems/jointID/target.tsv
files, and (2) it gives a file output to problem.joint.targets which
did not have one before.

2017.10.14

In problem.train we got
Error in plot_clone(p) : attempt to apply non-function
with ggplot2_2.2.1 installed, and
Imports: ggplot2Animint, animint2
I think this has something to do with conflicting S3 methods
for the gg class.
For now I fixed it by moving these Imports to Suggests,
and using requireNamespace and animint2:: and ggplot2Animint::

2017.09.01

use animint2 instead of animint.

First green build with three jobs on travis: CRAN, input, noinput.

2017.08.11

add bigwig.R and mclapply.R (removed from PeakSegJoint).

2017.08.09

compiling, installing, passing demo test.

pipeline stops in target interval computation if there is non-integer
data in bigWig files.

import PeakSegJoint >= 2017.08.08 which returns mean.mat, which we use
to derive a log peak height relative to background, in
problem.joint.predict.

2017.06.19

copied code from PeakSegFPOP repo, modified for R interface.